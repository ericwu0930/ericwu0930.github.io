[{"author":null,"categories":null,"content":null,"date":1599350400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":1599350400,"objectID":"","permalink":"https://ericwu0930.github.io/categories/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/","section":"categories","summary":"","tags":null,"title":"Categories","type":"categories","url":"/categories/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1599350400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"home","lang":"en","lastmod":1599350400,"objectID":"","permalink":"https://ericwu0930.github.io/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/","section":"","summary":"","tags":null,"title":"Eric's Blog","type":"page","url":"/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1599350400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1599350400,"objectID":"","permalink":"https://ericwu0930.github.io/tags/linux/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/linux/","section":"tags","summary":"","tags":null,"title":"Linux","type":"tags","url":"/tags/linux/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1599350400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":1599350400,"objectID":"","permalink":"https://ericwu0930.github.io/post/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/post/","section":"post","summary":"","tags":null,"title":"Posts","type":"post","url":"/post/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"最近在学习redis相关知识，了解到redis也是基于多路复用设计的，因此专门了解了下select与epoll这两种常见的多路复用器，本文总结自《深入理解计算机系统》与《深入理解Nginx》","date":1599350400,"description":"最近在学习redis相关知识，了解到redis也是基于多路复用设计的，因此专门了解了下select与epoll这两种常见的多路复用器，本文总结自《深入理解计算机系统》与《深入理解Nginx》","dir":"post/","excerpt_html":"最近在学习redis相关知识，了解到redis也是基于多路复用设计的，因此专门了解了下select与epoll这两种常见的多路复用器，本文总结自《深入理解计算机系统》与《深入理解Nginx》","excerpt_text":"最近在学习redis相关知识，了解到redis也是基于多路复用设计的，因此专门了解了下select与epoll这两种常见的多路复用器，本文总结自《深入理解计算机系统》与《深入理解Nginx》","expirydate":-62135596800,"fuzzywordcount":1400,"html":"最近在学习redis相关知识，了解到redis也是基于多路复用设计的，因此专门了解了下select与epoll这两种常见的多路复用器，本文总结自《深入理解计算机系统》与《深入理解Nginx》","keywords":null,"kind":"page","lang":"en","lastmod":1599350400,"objectID":"e305fbe0ef99a65ceccad0b5f4d33d0e","permalink":"https://ericwu0930.github.io/post/epoll/","publishdate":"2020-09-06T00:00:00Z","readingtime":3,"relpermalink":"/post/epoll/","section":"post","summary":"1. 前言 假设要写一个echo服务器，用于对用户从标准输入键入的交互命令做出相应，在这种情况下，服务器必须相应两个独立的I/O事件：1）网络客户","tags":["学习笔记","Linux"],"title":"select与epoll比较","type":"post","url":"/post/epoll/","weight":0,"wordcount":1353},{"author":null,"categories":null,"content":null,"date":1599350400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":1599350400,"objectID":"","permalink":"https://ericwu0930.github.io/tags/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/","section":"tags","summary":"","tags":null,"title":"Tags","type":"tags","url":"/tags/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1599350400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1599350400,"objectID":"","permalink":"https://ericwu0930.github.io/categories/tech/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/tech/","section":"categories","summary":"","tags":null,"title":"Tech","type":"categories","url":"/categories/tech/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1599350400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1599350400,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","section":"tags","summary":"","tags":null,"title":"学习笔记","type":"tags","url":"/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1599177600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1599177600,"objectID":"","permalink":"https://ericwu0930.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","section":"categories","summary":"","tags":null,"title":"学习笔记","type":"categories","url":"/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1599177600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1599177600,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E7%90%90%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%90%90%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9/","section":"tags","summary":"","tags":null,"title":"琐碎知识点","type":"tags","url":"/tags/%E7%90%90%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9/","weight":0,"wordcount":0},{"author":null,"categories":["学习笔记"],"content":"","date":1599177600,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1599177600,"objectID":"4d8fbc496c82a1b4824a8ace5d37fb1b","permalink":"https://ericwu0930.github.io/post/trival/","publishdate":"2020-09-04T00:00:00Z","readingtime":2,"relpermalink":"/post/trival/","section":"post","summary":"学习过程中一些优秀学习资源，因知识点琐碎很难分类，单独开一篇记录 序列化：https://blog.csdn.net/qq_35890572/","tags":["琐碎知识点"],"title":"琐碎知识点记录","type":"post","url":"/post/trival/","weight":0,"wordcount":640},{"author":null,"categories":["Tech"],"content":"","date":1597104000,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1700,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1597104000,"objectID":"63f662600aa263d5e475db5c66de6452","permalink":"https://ericwu0930.github.io/post/mvcc/","publishdate":"2020-08-11T00:00:00Z","readingtime":4,"relpermalink":"/post/mvcc/","section":"post","summary":"0. 事务回顾 MySQL中有四种事务隔离级别，READ UNCOMMITTED，READ COMMITTED， REPEATABLE READ，SERIALIZABLE，","tags":["MySQL学习笔记"],"title":"MVCC版本控制","type":"post","url":"/post/mvcc/","weight":0,"wordcount":1653},{"author":null,"categories":null,"content":null,"date":1597104000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1597104000,"objectID":"","permalink":"https://ericwu0930.github.io/tags/mysql/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mysql/","section":"tags","summary":"","tags":null,"title":"mysql","type":"tags","url":"/tags/mysql/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1597104000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1597104000,"objectID":"","permalink":"https://ericwu0930.github.io/tags/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","section":"tags","summary":"","tags":null,"title":"MySQL学习笔记","type":"tags","url":"/tags/mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"转载整理补充","date":1597104000,"description":"转载整理补充","dir":"post/","excerpt_html":"转载整理补充","excerpt_text":"转载整理补充","expirydate":-62135596800,"fuzzywordcount":17600,"html":"转载整理补充","keywords":null,"kind":"page","lang":"en","lastmod":1597104000,"objectID":"7bd81708cf0bcd06e7763bffd33c030a","permalink":"https://ericwu0930.github.io/post/innodb_index/","publishdate":"2020-08-11T00:00:00Z","readingtime":35,"relpermalink":"/post/innodb_index/","section":"post","summary":"整体框架来源自 MySQL索引背后的数据结构及算法原理这是我近几年看到的最好的一篇有关数据库索引的文章，本人重新进行了排版，并将磁盘存取原理这","tags":["学习笔记","MySQL"],"title":"MySQL索引背后的数据结构及算法原理","type":"post","url":"/post/innodb_index/","weight":0,"wordcount":17505},{"author":null,"categories":null,"content":null,"date":1591142400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1591142400,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/","section":"tags","summary":"","tags":null,"title":"并发编程","type":"tags","url":"/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"整理总结自《JAVA并发编程实战》","date":1591142400,"description":"整理总结自《JAVA并发编程实战》","dir":"post/","excerpt_html":"整理总结自《JAVA并发编程实战》","excerpt_text":"整理总结自《JAVA并发编程实战》","expirydate":-62135596800,"fuzzywordcount":6700,"html":"整理总结自《JAVA并发编程实战》","keywords":null,"kind":"page","lang":"en","lastmod":1591142400,"objectID":"4905912cce6de8a9f86fc2e21bf6dbb7","permalink":"https://ericwu0930.github.io/post/threadpool/","publishdate":"2020-06-03T00:00:00Z","readingtime":14,"relpermalink":"/post/threadpool/","section":"post","summary":"一、回顾： 线程运行的两种方式： 方法一： 创建自定义类extends Thread （或者使用匿名类进行定义） 重写run()方法 调用该类start方法启动 new Thread(){","tags":["学习笔记","并发编程"],"title":"线程池浅谈","type":"post","url":"/post/threadpool/","weight":0,"wordcount":6695},{"author":null,"categories":["Tech"],"content":"作者：Mingqi 链接：https://www.zhihu.com/question/23277575/answer/169698662 来源：知乎","date":1590192000,"description":"作者：Mingqi 链接：https://www.zhihu.com/question/23277575/answer/169698662 来源：知乎","dir":"post/","excerpt_html":"作者：Mingqi 链接：https://www.zhihu.com/question/23277575/answer/169698662 来源：知乎","excerpt_text":"作者：Mingqi 链接：https://www.zhihu.com/question/23277575/answer/169698662 来源：知乎","expirydate":-62135596800,"fuzzywordcount":2700,"html":"作者：Mingqi 链接：https://www.zhihu.com/question/23277575/answer/169698662 来源：知乎","keywords":null,"kind":"page","lang":"en","lastmod":1590192000,"objectID":"526e150da8caad8ace033accdbcc571a","permalink":"https://ericwu0930.github.io/post/springioc/","publishdate":"2020-05-23T00:00:00Z","readingtime":6,"relpermalink":"/post/springioc/","section":"post","summary":"作者：Mingqi 链接：https://www.zhihu.com/question/23277575/answer/169698662 来源","tags":["Java学习笔记","Spring"],"title":"[转]Spring IOC","type":"post","url":"/post/springioc/","weight":0,"wordcount":2638},{"author":null,"categories":null,"content":null,"date":1590192000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1590192000,"objectID":"","permalink":"https://ericwu0930.github.io/tags/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","section":"tags","summary":"","tags":null,"title":"Java学习笔记","type":"tags","url":"/tags/java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1590192000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1590192000,"objectID":"","permalink":"https://ericwu0930.github.io/tags/spring/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/spring/","section":"tags","summary":"","tags":null,"title":"Spring","type":"tags","url":"/tags/spring/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1590019200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1590019200,"objectID":"","permalink":"https://ericwu0930.github.io/tags/java%E5%9F%BA%E7%A1%80/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/java%E5%9F%BA%E7%A1%80/","section":"tags","summary":"","tags":null,"title":"Java基础","type":"tags","url":"/tags/java%E5%9F%BA%E7%A1%80/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"反射 注解——框架的灵魂","date":1590019200,"description":"反射 注解——框架的灵魂","dir":"post/","excerpt_html":"反射 注解——框架的灵魂","excerpt_text":"反射 注解——框架的灵魂","expirydate":-62135596800,"fuzzywordcount":2400,"html":"反射 注解——框架的灵魂","keywords":null,"kind":"page","lang":"en","lastmod":1590019200,"objectID":"ed26bb5636dc343d625e30895df08c85","permalink":"https://ericwu0930.github.io/post/reflection/","publishdate":"2020-05-21T00:00:00Z","readingtime":5,"relpermalink":"/post/reflection/","section":"post","summary":"最近在学习Spring框架，分析源码时经常会用到反射和注解机制，这里对注解和反射做一个总结 1. 注解 首先，注解！=注释，注释是用文字描述程序，是","tags":["学习笔记","Java基础"],"title":"反射与注解","type":"post","url":"/post/reflection/","weight":0,"wordcount":2366},{"author":null,"categories":["Tech"],"content":"","date":1589500800,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":1400,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1589500800,"objectID":"13794f18405b12b888f82c7a0b91c1d0","permalink":"https://ericwu0930.github.io/post/aop/","publishdate":"2020-05-15T00:00:00Z","readingtime":3,"relpermalink":"/post/aop/","section":"post","summary":"作为鹅厂新晋实习生，已经来鹅厂一个月啦，虽然一直在团队中打杂写单测，但也学到了很多东西，比如最近在看Spring AOP相关的知识，也刚好看到","tags":["实习笔记","Spring"],"title":"Spring AOP在单测中的应用","type":"post","url":"/post/aop/","weight":0,"wordcount":1304},{"author":null,"categories":null,"content":null,"date":1589500800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1589500800,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E5%AE%9E%E4%B9%A0%E7%AC%94%E8%AE%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AE%9E%E4%B9%A0%E7%AC%94%E8%AE%B0/","section":"tags","summary":"","tags":null,"title":"实习笔记","type":"tags","url":"/tags/%E5%AE%9E%E4%B9%A0%E7%AC%94%E8%AE%B0/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"classpath个人理解","date":1589328000,"description":"classpath个人理解","dir":"post/","excerpt_html":"classpath个人理解","excerpt_text":"classpath个人理解","expirydate":-62135596800,"fuzzywordcount":1700,"html":"classpath个人理解","keywords":null,"kind":"page","lang":"en","lastmod":1589328000,"objectID":"962d965b83e030dcf52f26122f285a3f","permalink":"https://ericwu0930.github.io/post/classpath/","publishdate":"2020-05-13T00:00:00Z","readingtime":4,"relpermalink":"/post/classpath/","section":"post","summary":"1. ClassPath到底在哪儿？ 之前一直有个误解，认为classpath是编译前概念，所以看到src文件夹下有main，有test，有res","tags":["学习笔记"],"title":"关于IDEA中classpath的定义","type":"post","url":"/post/classpath/","weight":0,"wordcount":1637},{"author":null,"categories":["Tech"],"content":"转自原文https://blog.csdn.net/qq_37757008/article/details/84845556，稍作修改","date":1589155200,"description":"转自原文https://blog.csdn.net/qq_37757008/article/details/84845556，稍作修改","dir":"post/","excerpt_html":"转自原文https://blog.csdn.net/qq_37757008/article/details/84845556，稍作修改","excerpt_text":"转自原文https://blog.csdn.net/qq_37757008/article/details/84845556，稍作修改","expirydate":-62135596800,"fuzzywordcount":2700,"html":"转自原文https://blog.csdn.net/qq_37757008/article/details/84845556，稍作修改","keywords":null,"kind":"page","lang":"en","lastmod":1589155200,"objectID":"207647f4c8ae9177e230c08ca6e525a1","permalink":"https://ericwu0930.github.io/post/stream/","publishdate":"2020-05-11T00:00:00Z","readingtime":6,"relpermalink":"/post/stream/","section":"post","summary":"转自原文https://blog.csdn.net/qq_37757008/article/details/84845556，稍作修改 1. St","tags":["学习笔记","Java基础"],"title":"JDK1.8新特性——Stream流","type":"post","url":"/post/stream/","weight":0,"wordcount":2608},{"author":null,"categories":["Tech"],"content":"Linux入门总结","date":1589068800,"description":"Linux入门总结","dir":"post/","excerpt_html":"Linux入门总结","excerpt_text":"Linux入门总结","expirydate":-62135596800,"fuzzywordcount":3200,"html":"Linux入门总结","keywords":null,"kind":"page","lang":"en","lastmod":1589068800,"objectID":"c3125b5771c61dd69301a7333b07171b","permalink":"https://ericwu0930.github.io/post/linux_intro/","publishdate":"2020-05-10T00:00:00Z","readingtime":7,"relpermalink":"/post/linux_intro/","section":"post","summary":"1. Linux权限管理 -rw-r--r-- - 文件类型(-文件 d目录 l软链接) rw- u所有者权限 r-- g所属组权限 r-- o其他人 改变文件权限： chmod [选项] 模式 文件名 - 常用选项 -R","tags":["学习笔记","Linux"],"title":"Linux基础入门","type":"post","url":"/post/linux_intro/","weight":0,"wordcount":3126},{"author":null,"categories":null,"content":null,"date":1586390400,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1586390400,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E6%80%BB%E7%BB%93/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%80%BB%E7%BB%93/","section":"tags","summary":"","tags":null,"title":"总结","type":"tags","url":"/tags/%E6%80%BB%E7%BB%93/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"学习路线及转行感悟","date":1586390400,"description":"学习路线及转行感悟","dir":"post/","excerpt_html":"学习路线及转行感悟","excerpt_text":"学习路线及转行感悟","expirydate":-62135596800,"fuzzywordcount":2700,"html":"学习路线及转行感悟","keywords":null,"kind":"page","lang":"en","lastmod":1586390400,"objectID":"236a40aaf8e28b258151162d1406821e","permalink":"https://ericwu0930.github.io/post/summary/","publishdate":"2020-04-09T00:00:00Z","readingtime":6,"relpermalink":"/post/summary/","section":"post","summary":"1. 前言 很幸运收到了腾讯Java后台开发的oc，从3月11号投递简历，到4月8号接到oc，非常感谢菜菜学长一直义务解答各种疑惑，受菜菜学长的委","tags":["总结"],"title":"我的转码之路","type":"post","url":"/post/summary/","weight":0,"wordcount":2627},{"author":null,"categories":null,"content":null,"date":1586131200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1586131200,"objectID":"","permalink":"https://ericwu0930.github.io/tags/redis/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/redis/","section":"tags","summary":"","tags":null,"title":"Redis","type":"tags","url":"/tags/redis/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"整理自《Redis设计与实现》第一部分","date":1586131200,"description":"整理自《Redis设计与实现》第一部分","dir":"post/","excerpt_html":"整理自《Redis设计与实现》第一部分","excerpt_text":"整理自《Redis设计与实现》第一部分","expirydate":-62135596800,"fuzzywordcount":4500,"html":"整理自《Redis设计与实现》第一部分","keywords":null,"kind":"page","lang":"en","lastmod":1586131200,"objectID":"e7032dcd15611e3efbd9f386962783fb","permalink":"https://ericwu0930.github.io/post/redis_struct/","publishdate":"2020-04-06T00:00:00Z","readingtime":9,"relpermalink":"/post/redis_struct/","section":"post","summary":"Redis是用c语言开发的一个开源的高性能键值对（key-value）数据库，Redis数据库里面的每个键值对都是由对象（object）组成","tags":["学习笔记","Redis"],"title":"Redis数据结构与对象","type":"post","url":"/post/redis_struct/","weight":0,"wordcount":4448},{"author":null,"categories":null,"content":null,"date":1585612800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1585612800,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","section":"tags","summary":"","tags":null,"title":"计算机网络","type":"tags","url":"/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"计算机网络中比较零散的知识点汇总","date":1585612800,"description":"计算机网络中比较零散的知识点汇总","dir":"post/","excerpt_html":"计算机网络中比较零散的知识点汇总","excerpt_text":"计算机网络中比较零散的知识点汇总","expirydate":-62135596800,"fuzzywordcount":5700,"html":"计算机网络中比较零散的知识点汇总","keywords":null,"kind":"page","lang":"en","lastmod":1585612800,"objectID":"1e96f37417fdbdfd33d0641cc82f3cec","permalink":"https://ericwu0930.github.io/post/cnet/","publishdate":"2020-03-31T00:00:00Z","readingtime":12,"relpermalink":"/post/cnet/","section":"post","summary":"1. DNS域名解析系统 DNS服务器分为三种，根域名服务器、顶级域名服务器以及权限域名服务器。在因特网上有13个根DNS服务器，他们的命名从A-","tags":["学习笔记","计算机网络"],"title":"计算机网络零散知识点总结","type":"post","url":"/post/cnet/","weight":0,"wordcount":5641},{"author":null,"categories":["Tech"],"content":"整理自《MySQL技术内幕》","date":1585008000,"description":"整理自《MySQL技术内幕》","dir":"post/","excerpt_html":"整理自《MySQL技术内幕》","excerpt_text":"整理自《MySQL技术内幕》","expirydate":-62135596800,"fuzzywordcount":2500,"html":"整理自《MySQL技术内幕》","keywords":null,"kind":"page","lang":"en","lastmod":1585008000,"objectID":"a151ab3cb93f849bca15494682222822","permalink":"https://ericwu0930.github.io/post/innodb_lock/","publishdate":"2020-03-24T00:00:00Z","readingtime":5,"relpermalink":"/post/innodb_lock/","section":"post","summary":"本篇文章整理自《MySQL技术内幕》第6章 锁，调整了文章中的顺序使其更加符合逻辑，也对文章中令我感到疑惑的地方通过查阅资料进行了补充和说明 1.","tags":["学习笔记","MySQL"],"title":"InnoDB锁的实现","type":"post","url":"/post/innodb_lock/","weight":0,"wordcount":2443},{"author":null,"categories":["Tech"],"content":"整理自《MySQL技术内部》","date":1584835200,"description":"整理自《MySQL技术内部》","dir":"post/","excerpt_html":"整理自《MySQL技术内部》","excerpt_text":"整理自《MySQL技术内部》","expirydate":-62135596800,"fuzzywordcount":3800,"html":"整理自《MySQL技术内部》","keywords":null,"kind":"page","lang":"en","lastmod":1584835200,"objectID":"c76fcc6f307010aa9fec0db40d553ee4","permalink":"https://ericwu0930.github.io/post/innodb/","publishdate":"2020-03-22T00:00:00Z","readingtime":8,"relpermalink":"/post/innodb/","section":"post","summary":"由于Mysql数据库中的存储引擎是插件式的，而存储引擎又是基于表的，因此可以根据不同的需要使用不同的存储引擎创建表。 InnoDB是Mysql","tags":["学习笔记","MySQL"],"title":"InnoDB存储引擎结构","type":"post","url":"/post/innodb/","weight":0,"wordcount":3762},{"author":null,"categories":["Tech"],"content":"Java内存模型 volatile关键字 线程安全 锁优化","date":1583884800,"description":"Java内存模型 volatile关键字 线程安全 锁优化","dir":"post/","excerpt_html":"Java内存模型 volatile关键字 线程安全 锁优化","excerpt_text":"Java内存模型 volatile关键字 线程安全 锁优化","expirydate":-62135596800,"fuzzywordcount":5000,"html":"Java内存模型 volatile关键字 线程安全 锁优化","keywords":null,"kind":"page","lang":"en","lastmod":1583884800,"objectID":"cac6597901b48f25399c1100d569d2c2","permalink":"https://ericwu0930.github.io/post/lock/","publishdate":"2020-03-11T00:00:00Z","readingtime":10,"relpermalink":"/post/lock/","section":"post","summary":"1. Java内存模型 1.1 硬件的效率与一致性 基于高速缓存的存储交互很好的解决了处理器与内存的速度矛盾，但也为计算机系统带来更高的复杂度，因为它引入","tags":["学习笔记","并发编程"],"title":"Java内存模型与锁优化","type":"post","url":"/post/lock/","weight":0,"wordcount":4975},{"author":null,"categories":["Tech"],"content":"介绍Java的四种引用：强引用，软引用，弱引用，虚引用及其使用案例","date":1583884800,"description":"介绍Java的四种引用：强引用，软引用，弱引用，虚引用及其使用案例","dir":"post/","excerpt_html":"介绍Java的四种引用：强引用，软引用，弱引用，虚引用及其使用案例","excerpt_text":"介绍Java的四种引用：强引用，软引用，弱引用，虚引用及其使用案例","expirydate":-62135596800,"fuzzywordcount":1600,"html":"介绍Java的四种引用：强引用，软引用，弱引用，虚引用及其使用案例","keywords":null,"kind":"page","lang":"en","lastmod":1583884800,"objectID":"91bdaca64479a1957804c793ef7b95a0","permalink":"https://ericwu0930.github.io/post/reference/","publishdate":"2020-03-11T00:00:00Z","readingtime":3,"relpermalink":"/post/reference/","section":"post","summary":"强引用： 只有所有的GC Roots对象都不通过强引用引用对象时，该对象才能被回收 软引用 当内存不足时，GC会把软引用指向的对象回收。软引用被经常","tags":["源码分析"],"title":"Java的四种引用以及ThreadLocal源码分析","type":"post","url":"/post/reference/","weight":0,"wordcount":1500},{"author":null,"categories":null,"content":null,"date":1583884800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1583884800,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/","section":"tags","summary":"","tags":null,"title":"源码分析","type":"tags","url":"/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"","date":1583712000,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":2800,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1583712000,"objectID":"29135d111970d29688672beba862fd0e","permalink":"https://ericwu0930.github.io/post/concurrenthashmap/","publishdate":"2020-03-09T00:00:00Z","readingtime":6,"relpermalink":"/post/concurrenthashmap/","section":"post","summary":"本文总结自以下两篇博文，https://blog.csdn.net/weixin_44460333/article/details/8677","tags":["源码分析","学习笔记"],"title":"ConcurrentHashMap源码分析","type":"post","url":"/post/concurrenthashmap/","weight":0,"wordcount":2760},{"author":null,"categories":null,"content":null,"date":1583539200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1583539200,"objectID":"","permalink":"https://ericwu0930.github.io/tags/java%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/java%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/","section":"tags","summary":"","tags":null,"title":"Java语言基础","type":"tags","url":"/tags/java%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"总结自《Java核心技术》","date":1583539200,"description":"总结自《Java核心技术》","dir":"post/","excerpt_html":"总结自《Java核心技术》","excerpt_text":"总结自《Java核心技术》","expirydate":-62135596800,"fuzzywordcount":1800,"html":"总结自《Java核心技术》","keywords":null,"kind":"page","lang":"en","lastmod":1583539200,"objectID":"c13e0213994f711bc4a71b89aec32b12","permalink":"https://ericwu0930.github.io/post/innerclass/","publishdate":"2020-03-07T00:00:00Z","readingtime":4,"relpermalink":"/post/innerclass/","section":"post","summary":"之前看过很多遍内部类，但总对其概念比较模糊，这次对其进行一个总结。 1. 内部类的特权 内部类指的是在一个类的内部所定义的类，类名不需要和源文件名相","tags":["学习笔记","Java语言基础"],"title":"内部类","type":"post","url":"/post/innerclass/","weight":0,"wordcount":1754},{"author":null,"categories":null,"content":null,"date":1583452800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1583452800,"objectID":"","permalink":"https://ericwu0930.github.io/tags/jvm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/jvm/","section":"tags","summary":"","tags":null,"title":"JVM","type":"tags","url":"/tags/jvm/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"整理自《深入理解Java虚拟机》","date":1583452800,"description":"整理自《深入理解Java虚拟机》","dir":"post/","excerpt_html":"整理自《深入理解Java虚拟机》","excerpt_text":"整理自《深入理解Java虚拟机》","expirydate":-62135596800,"fuzzywordcount":1200,"html":"整理自《深入理解Java虚拟机》","keywords":null,"kind":"page","lang":"en","lastmod":1583452800,"objectID":"8cfedd0683a6ec247c3751deb14cf685","permalink":"https://ericwu0930.github.io/post/exception/","publishdate":"2020-03-06T00:00:00Z","readingtime":3,"relpermalink":"/post/exception/","section":"post","summary":"异常处理背后的JVM原理 1. 异常分类 Java体系中异常的组织分类如下图所示，所有异常类型的根类为 Throwable，具体包括两大类：Error","tags":["JVM","学习笔记"],"title":"异常处理背后的JVM原理","type":"post","url":"/post/exception/","weight":0,"wordcount":1113},{"author":null,"categories":null,"content":null,"date":1583193600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1583193600,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E7%AE%97%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%AE%97%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"算法","type":"tags","url":"/tags/%E7%AE%97%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"总结自《算法》第四版","date":1583193600,"description":"总结自《算法》第四版","dir":"post/","excerpt_html":"总结自《算法》第四版","excerpt_text":"总结自《算法》第四版","expirydate":-62135596800,"fuzzywordcount":3400,"html":"总结自《算法》第四版","keywords":null,"kind":"page","lang":"en","lastmod":1583193600,"objectID":"73d18e1dbbc30a20ddddd3093028b3ae","permalink":"https://ericwu0930.github.io/post/redblackbst/","publishdate":"2020-03-03T00:00:00Z","readingtime":7,"relpermalink":"/post/redblackbst/","section":"post","summary":"在一棵含有N个结点的树种，我们希望树高为~lgN，这样我们就能保证所有查找都能在~lgN次比较内结束，就和二分查找一样。但是在动态插入种保证","tags":["学习笔记","算法"],"title":"红黑二叉树","type":"post","url":"/post/redblackbst/","weight":0,"wordcount":3360},{"author":null,"categories":["Tech"],"content":"整理自《图解HTTP》","date":1581811200,"description":"整理自《图解HTTP》","dir":"post/","excerpt_html":"整理自《图解HTTP》","excerpt_text":"整理自《图解HTTP》","expirydate":-62135596800,"fuzzywordcount":6500,"html":"整理自《图解HTTP》","keywords":null,"kind":"page","lang":"en","lastmod":1581811200,"objectID":"35e1378233b79e86d92afd7c8819cccf","permalink":"https://ericwu0930.github.io/post/http/","publishdate":"2020-02-16T00:00:00Z","readingtime":13,"relpermalink":"/post/http/","section":"post","summary":"1. Http的初步认识 1.1 Http的诞生 CERN的蒂姆·伯纳斯-李博士提出一种让全球研究者共享知识的设想：借助多文档之间互相关联形成的超文本，连","tags":["计算机网络","学习笔记"],"title":"HTTP协议","type":"post","url":"/post/http/","weight":0,"wordcount":6443},{"author":null,"categories":["Tech"],"content":"整理自《TCP/IP详解卷一》","date":1581638400,"description":"整理自《TCP/IP详解卷一》","dir":"post/","excerpt_html":"整理自《TCP/IP详解卷一》","excerpt_text":"整理自《TCP/IP详解卷一》","expirydate":-62135596800,"fuzzywordcount":8000,"html":"整理自《TCP/IP详解卷一》","keywords":null,"kind":"page","lang":"en","lastmod":1581638400,"objectID":"1a81e08b4c01827998d4800ca5a7e73c","permalink":"https://ericwu0930.github.io/post/tcp/","publishdate":"2020-02-14T00:00:00Z","readingtime":16,"relpermalink":"/post/tcp/","section":"post","summary":"1. TCP概述 不同于UDP，TCP提供一种面向连接的、可靠的字节流服务，没有由TCP自动插入的记录标志或消息边界，TCP根本不会解读字节流里的","tags":["计算机网络","学习笔记"],"title":"TCP:控制传输协议","type":"post","url":"/post/tcp/","weight":0,"wordcount":7902},{"author":null,"categories":["Tech"],"content":"整理自《图解HTTP》与《TCP/IP详解卷一》","date":1581638400,"description":"整理自《图解HTTP》与《TCP/IP详解卷一》","dir":"post/","excerpt_html":"整理自《图解HTTP》与《TCP/IP详解卷一》","excerpt_text":"整理自《图解HTTP》与《TCP/IP详解卷一》","expirydate":-62135596800,"fuzzywordcount":1200,"html":"整理自《图解HTTP》与《TCP/IP详解卷一》","keywords":null,"kind":"page","lang":"en","lastmod":1581638400,"objectID":"94a12c84477727f9df08f7f72c1bf0f4","permalink":"https://ericwu0930.github.io/post/security/","publishdate":"2020-02-14T00:00:00Z","readingtime":3,"relpermalink":"/post/security/","section":"post","summary":"加密是为了满足以下需求：在不安全的信道上保护所传输信息的机密性、完整性以及可认证性。有两种重要的加密算法——对称密钥与非对称密钥。 对称密钥 在","tags":["计算机网络","学习笔记"],"title":"加密与安全机制","type":"post","url":"/post/security/","weight":0,"wordcount":1196},{"author":null,"categories":["Tech"],"content":"整理自《深入理解Java虚拟机》","date":1579305600,"description":"整理自《深入理解Java虚拟机》","dir":"post/","excerpt_html":"整理自《深入理解Java虚拟机》","excerpt_text":"整理自《深入理解Java虚拟机》","expirydate":-62135596800,"fuzzywordcount":2700,"html":"整理自《深入理解Java虚拟机》","keywords":null,"kind":"page","lang":"en","lastmod":1579305600,"objectID":"e760d370a1a9c3679f3900d22a87efee","permalink":"https://ericwu0930.github.io/post/mem/","publishdate":"2020-01-18T00:00:00Z","readingtime":6,"relpermalink":"/post/mem/","section":"post","summary":"Java与C++之间有一堵由内存动态分配和垃圾收集技术所围成的“高墙”，墙外面的人想进去，墙里面的人却想出来 1. 运行时数据区域划分 程序计数器：","tags":["JVM","学习笔记"],"title":"Java内存区域","type":"post","url":"/post/mem/","weight":0,"wordcount":2686},{"author":null,"categories":["Tech"],"content":"坦克大战项目反思","date":1577232000,"description":"坦克大战项目反思","dir":"post/","excerpt_html":"坦克大战项目反思","excerpt_text":"坦克大战项目反思","expirydate":-62135596800,"fuzzywordcount":2000,"html":"坦克大战项目反思","keywords":null,"kind":"page","lang":"en","lastmod":1577232000,"objectID":"323c4c00e06ef7f4706a1d5c38e55124","permalink":"https://ericwu0930.github.io/post/classinit/","publishdate":"2019-12-25T00:00:00Z","readingtime":4,"relpermalink":"/post/classinit/","section":"post","summary":"今天在做马士兵的坦克项目时，有个问题让我困惑了很久，翻阅了《深入理解Java虚拟机》以及《Java核心技术》之后，稍微找到了一些眉目，在这里","tags":["项目反思","JVM"],"title":"Java类中数据域初始化顺序","type":"post","url":"/post/classinit/","weight":0,"wordcount":1968},{"author":null,"categories":null,"content":null,"date":1577232000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1577232000,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%8F%8D%E6%80%9D/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%A1%B9%E7%9B%AE%E5%8F%8D%E6%80%9D/","section":"tags","summary":"","tags":null,"title":"项目反思","type":"tags","url":"/tags/%E9%A1%B9%E7%9B%AE%E5%8F%8D%E6%80%9D/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"整理自《深入理解Java虚拟机》与《Java核心技术卷1》","date":1576713600,"description":"整理自《深入理解Java虚拟机》与《Java核心技术卷1》","dir":"post/","excerpt_html":"整理自《深入理解Java虚拟机》与《Java核心技术卷1》","excerpt_text":"整理自《深入理解Java虚拟机》与《Java核心技术卷1》","expirydate":-62135596800,"fuzzywordcount":1400,"html":"整理自《深入理解Java虚拟机》与《Java核心技术卷1》","keywords":null,"kind":"page","lang":"en","lastmod":1576713600,"objectID":"32eb3ac2ce1108cadd8238726f999845","permalink":"https://ericwu0930.github.io/post/polymorphism/","publishdate":"2019-12-19T00:00:00Z","readingtime":3,"relpermalink":"/post/polymorphism/","section":"post","summary":"在《Java核心技术卷一》一书中，对方法调用有着比较明确的阐述。书中写道，假设要调用x.f(args)，隐式参数x声明为类C的一个对象，调用","tags":["学习笔记","JVM"],"title":"多态在JVM中的体现","type":"post","url":"/post/polymorphism/","weight":0,"wordcount":1371},{"author":null,"categories":null,"content":null,"date":1576627200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1576627200,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","section":"tags","summary":"","tags":null,"title":"设计模式","type":"tags","url":"/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"总结自《Head First 设计模式》","date":1576627200,"description":"总结自《Head First 设计模式》","dir":"post/","excerpt_html":"总结自《Head First 设计模式》","excerpt_text":"总结自《Head First 设计模式》","expirydate":-62135596800,"fuzzywordcount":6000,"html":"总结自《Head First 设计模式》","keywords":null,"kind":"page","lang":"en","lastmod":1576627200,"objectID":"632bc2cc58d92f95f0fc64a8f39e27a9","permalink":"https://ericwu0930.github.io/post/design/","publishdate":"2019-12-18T00:00:00Z","readingtime":12,"relpermalink":"/post/design/","section":"post","summary":"设计模式归根到底都是多态的变种 一、Singleton单例模式 只需要一个实例存在，比如PropertyMgr，即阻止别人随意new该对象 Key: 把构","tags":["学习笔记","设计模式"],"title":"设计模式学习笔记","type":"post","url":"/post/design/","weight":0,"wordcount":5947},{"author":null,"categories":["Tech"],"content":"整理自《深入理解Java虚拟机》","date":1576368000,"description":"整理自《深入理解Java虚拟机》","dir":"post/","excerpt_html":"整理自《深入理解Java虚拟机》","excerpt_text":"整理自《深入理解Java虚拟机》","expirydate":-62135596800,"fuzzywordcount":1000,"html":"整理自《深入理解Java虚拟机》","keywords":null,"kind":"page","lang":"en","lastmod":1576368000,"objectID":"a113cb70200e40081d9e70b867570491","permalink":"https://ericwu0930.github.io/post/method/","publishdate":"2019-12-15T00:00:00Z","readingtime":2,"relpermalink":"/post/method/","section":"post","summary":"以Demo类中的main方法为例，讲解字节码在虚拟机运行的过程 public class Demo{ public static void main(String[] args) { int a=10; int b=Short.MAX_VALUE+1; int c=a+b; System.out.println(c); } } 通过javap反编译后的代码 eric@wuhaodeMacBook-Pro  ~/Desktop/jvM  javap -v Demo","tags":["学习笔记","JVM"],"title":"JVM方法调用过程","type":"post","url":"/post/method/","weight":0,"wordcount":908},{"author":null,"categories":["Tech"],"content":"总结自《深入理解java虚拟机》","date":1575936000,"description":"总结自《深入理解java虚拟机》","dir":"post/","excerpt_html":"总结自《深入理解java虚拟机》","excerpt_text":"总结自《深入理解java虚拟机》","expirydate":-62135596800,"fuzzywordcount":2100,"html":"总结自《深入理解java虚拟机》","keywords":null,"kind":"page","lang":"en","lastmod":1575936000,"objectID":"9e22dd5a2bc14389ddb72d3fcdf97540","permalink":"https://ericwu0930.github.io/post/classloader/","publishdate":"2019-12-10T00:00:00Z","readingtime":5,"relpermalink":"/post/classloader/","section":"post","summary":"在类加载过程的加载阶段，“通过一个类的全限定名来获取描述此类的二进制字节流”是通过“类加载器”来实现的。类加载器虽然只用于实现类的加载动作，","tags":["学习笔记","JVM"],"title":"类加载器与双亲委派模型","type":"post","url":"/post/classloader/","weight":0,"wordcount":2079},{"author":null,"categories":["Tech"],"content":"","date":1575849600,"description":"","dir":"post/","excerpt_html":"","excerpt_text":"","expirydate":-62135596800,"fuzzywordcount":5300,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1575849600,"objectID":"2e66a82764fe3338b6bd32d0b3f47005","permalink":"https://ericwu0930.github.io/post/mysql/","publishdate":"2019-12-09T00:00:00Z","readingtime":11,"relpermalink":"/post/mysql/","section":"post","summary":"一、MySQL数据库软件 MySQL的结构 MySQL是一个客户端/服务器的架构，它的服务器程序直接和我们存储的数据打交道，然后可以有好多客户端","tags":["学习笔记","mysql"],"title":"数据库入门","type":"post","url":"/post/mysql/","weight":0,"wordcount":5289},{"author":null,"categories":["Tech"],"content":"总结自《深入理解java虚拟机》","date":1575331200,"description":"总结自《深入理解java虚拟机》","dir":"post/","excerpt_html":"总结自《深入理解java虚拟机》","excerpt_text":"总结自《深入理解java虚拟机》","expirydate":-62135596800,"fuzzywordcount":1900,"html":"总结自《深入理解java虚拟机》","keywords":null,"kind":"page","lang":"en","lastmod":1575331200,"objectID":"576c9fdf4c726a0de4b07d96383ce779","permalink":"https://ericwu0930.github.io/post/classload/","publishdate":"2019-12-03T00:00:00Z","readingtime":4,"relpermalink":"/post/classload/","section":"post","summary":"虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验、转换解析和初始化，最终形成可以被虚拟机直接使用的Java类型，这就是虚拟机","tags":["学习笔记","JVM"],"title":"JVM类加载机制","type":"post","url":"/post/classload/","weight":0,"wordcount":1876},{"author":null,"categories":["Tech"],"content":"总结自《深入理解java虚拟机》","date":1575158400,"description":"总结自《深入理解java虚拟机》","dir":"post/","excerpt_html":"总结自《深入理解java虚拟机》","excerpt_text":"总结自《深入理解java虚拟机》","expirydate":-62135596800,"fuzzywordcount":1700,"html":"总结自《深入理解java虚拟机》","keywords":null,"kind":"page","lang":"en","lastmod":1575158400,"objectID":"9dc4f78be4638ff096394ad8577ecec8","permalink":"https://ericwu0930.github.io/post/gc_3/","publishdate":"2019-12-01T00:00:00Z","readingtime":4,"relpermalink":"/post/gc_3/","section":"post","summary":"Java技术体系中所提倡的自动内存管理最终可以归结为自动化地解决两个问题：给对象分配内存以及回收分配给对象的内存。 在GC的第一篇总结笔记中提","tags":["学习笔记","JVM"],"title":"JVM内存分配策略与GC时机","type":"post","url":"/post/gc_3/","weight":0,"wordcount":1614},{"author":null,"categories":["Tech"],"content":"总结自《深入理解java虚拟机》","date":1575072000,"description":"总结自《深入理解java虚拟机》","dir":"post/","excerpt_html":"总结自《深入理解java虚拟机》","excerpt_text":"总结自《深入理解java虚拟机》","expirydate":-62135596800,"fuzzywordcount":2600,"html":"总结自《深入理解java虚拟机》","keywords":null,"kind":"page","lang":"en","lastmod":1575072000,"objectID":"a022ef462c60a98822db087bfc3ee8ae","permalink":"https://ericwu0930.github.io/post/gc_2/","publishdate":"2019-11-30T00:00:00Z","readingtime":6,"relpermalink":"/post/gc_2/","section":"post","summary":"如果说收集算法是内存回收的方法论，那么垃圾收集器就是内存回收的具体实现。 一、串行 单线程 堆内存较小，适合个人电脑 -XX: +UseSerialGC=Serial+SerialOld 新生代使用复制算法，老年代","tags":["学习笔记","JVM"],"title":"JVM垃圾收集器","type":"post","url":"/post/gc_2/","weight":0,"wordcount":2545},{"author":null,"categories":["Tech"],"content":"总结自《深入理解java虚拟机》","date":1574985600,"description":"总结自《深入理解java虚拟机》","dir":"post/","excerpt_html":"总结自《深入理解java虚拟机》","excerpt_text":"总结自《深入理解java虚拟机》","expirydate":-62135596800,"fuzzywordcount":2200,"html":"总结自《深入理解java虚拟机》","keywords":null,"kind":"page","lang":"en","lastmod":1574985600,"objectID":"74b32d5d7b951c8483d93dbcfe0eb7c0","permalink":"https://ericwu0930.github.io/post/gc_1/","publishdate":"2019-11-29T00:00:00Z","readingtime":5,"relpermalink":"/post/gc_1/","section":"post","summary":"Java与C++之间有一堵由内存动态分配和垃圾收集技术所围成的“高墙”，墙外面的人想进去，墙里面的人却想出来 GC要解决的问题无非是以下三个：","tags":["学习笔记","JVM"],"title":"JVM垃圾收集策略","type":"post","url":"/post/gc_1/","weight":0,"wordcount":2197},{"author":null,"categories":["Tech"],"content":"整理自《深入理解计算机系统》与《现代操作系统》","date":1569801600,"description":"整理自《深入理解计算机系统》与《现代操作系统》","dir":"post/","excerpt_html":"整理自《深入理解计算机系统》与《现代操作系统》","excerpt_text":"整理自《深入理解计算机系统》与《现代操作系统》","expirydate":-62135596800,"fuzzywordcount":2400,"html":"整理自《深入理解计算机系统》与《现代操作系统》","keywords":null,"kind":"page","lang":"en","lastmod":1569801600,"objectID":"47c0730ec1d190e5e009c0e992e8cc4e","permalink":"https://ericwu0930.github.io/post/memorymanage/","publishdate":"2019-09-30T00:00:00Z","readingtime":5,"relpermalink":"/post/memorymanage/","section":"post","summary":"如果不对内存抽象，会面临两个问题。第一，用户程序可以很容易的破坏才做系统；第二，想要同时运行多个程序比较困难，需要对程序进行重定位。于是现代","tags":["学习笔记","操作系统"],"title":"内存管理","type":"post","url":"/post/memorymanage/","weight":0,"wordcount":2300},{"author":null,"categories":null,"content":null,"date":1569801600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1569801600,"objectID":"","permalink":"https://ericwu0930.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/","section":"tags","summary":"","tags":null,"title":"操作系统","type":"tags","url":"/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/","weight":0,"wordcount":0},{"author":null,"categories":["Tech"],"content":"整理自《深入理解计算机系统》与《现代操作系统》","date":1568073600,"description":"整理自《深入理解计算机系统》与《现代操作系统》","dir":"post/","excerpt_html":"整理自《深入理解计算机系统》与《现代操作系统》","excerpt_text":"整理自《深入理解计算机系统》与《现代操作系统》","expirydate":-62135596800,"fuzzywordcount":3900,"html":"整理自《深入理解计算机系统》与《现代操作系统》","keywords":null,"kind":"page","lang":"en","lastmod":1568073600,"objectID":"001ae0577fcb601371b81d0b2fa5b04b","permalink":"https://ericwu0930.github.io/post/process/","publishdate":"2019-09-10T00:00:00Z","readingtime":8,"relpermalink":"/post/process/","section":"post","summary":"1. 进程 1.1 概念 进程的经典定义是一个执行中的程序的实例。与每个进程相关的是地址空间，地址空间中存放有可执行程序、程序的数据以及程序的堆栈。与每个","tags":["学习笔记","操作系统"],"title":"进程和线程","type":"post","url":"/post/process/","weight":0,"wordcount":3894},{"author":null,"categories":["Tech"],"content":"研一总结","date":1564444800,"description":"研一总结","dir":"post/","excerpt_html":"研一总结","excerpt_text":"研一总结","expirydate":-62135596800,"fuzzywordcount":1200,"html":"研一总结","keywords":null,"kind":"page","lang":"en","lastmod":1564444800,"objectID":"9639d2f0520c5ab7547e36c11ec63e86","permalink":"https://ericwu0930.github.io/post/first_year_in_shanghai/","publishdate":"2019-07-30T00:00:00Z","readingtime":3,"relpermalink":"/post/first_year_in_shanghai/","section":"post","summary":"自从在家有了充足的午休之后，整个作息全部乱掉了。结果就是连续多天的失眠，比如现在，在床上挣扎了一个小时后，还是毫无睡意，于是决定起身穿衣，在","tags":["总结"],"title":"长安米贵，居大不易","type":"post","url":"/post/first_year_in_shanghai/","weight":0,"wordcount":1199},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://ericwu0930.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7a0da914bde98a7d3fcc7f6c5886633c","permalink":"https://ericwu0930.github.io/top/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/about/","section":"top","summary":"个人介绍 博主名叫吴昊，山东淄博人，高中就读于淄博市实验中学，本科就读于四川大学吴玉章学院，后保研至上海交通大学机械工程与动力学院机器人研究所，天资愚笨，在科研领域无所建树，后在代码世界中找到慰藉与乐趣，学习Java转码中，平时看书喜欢把笔记写成MD文档，在朋友建议下开设个人网站，平时会把笔记以及学习心得上传到本站。\n受高中Homie影响，喜欢摄影，风光偏多，我会不定期的在本站中分享自己的摄影作品。电子产品爱好者，伪果粉，华为支持者，逐渐退烧。闲暇时间会打王者荣耀，徘徊于王者两星，不会打野。有颗向高雅艺术靠拢的心，但无奈身体很诚实的选择听流行音乐，最近常听Post Malone。\n平日寡言，但喜与志同道合者畅谈，崇拜性感的大脑，欢迎通过各种方式与博主进行交流。","tags":null,"title":"","type":"top","url":"/top/about/","weight":0,"wordcount":5},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"54ccacff97b96806d49760361ef17350","permalink":"https://ericwu0930.github.io/top/books/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/books/","section":"top","summary":"Machine learning学习笔记 Coursera 在线课程 Machine learning 笔记讲师: 吴恩达(Andrew Ng) 课程地址：https://www.","tags":null,"title":"","type":"top","url":"/top/books/","weight":0,"wordcount":10},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://ericwu0930.github.io/search/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/","section":"search","summary":"","tags":null,"title":"Searches","type":"search","url":"/search/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://ericwu0930.github.io/top/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/top/","section":"top","summary":"","tags":null,"title":"Tops","type":"top","url":"/top/","weight":0,"wordcount":0}]