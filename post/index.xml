<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Eric&#39;s Blog</title>
    <link>https://ericwu0930.github.io/post/</link>
    <description>Recent content in Posts on Eric&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ericwu0930.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>红黑二叉树</title>
      <link>https://ericwu0930.github.io/post/redblackbst/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ericwu0930.github.io/post/redblackbst/</guid>
      <description>在一棵含有N个结点的树种，我们希望树高为~lgN，这样我们就能保证所有查找都能在~lgN次比较内结束，就和二分查找一样。但是在动态插入种保证</description>
    </item>
    
    <item>
      <title>HTTP协议</title>
      <link>https://ericwu0930.github.io/post/http/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ericwu0930.github.io/post/http/</guid>
      <description>1. Http的初步认识 1.1 Http的诞生 CERN的蒂姆·伯纳斯-李博士提出一种让全球研究者共享知识的设想：借助多文档之间互相关联形成的超文本，连</description>
    </item>
    
    <item>
      <title>TCP:控制传输协议</title>
      <link>https://ericwu0930.github.io/post/tcp/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ericwu0930.github.io/post/tcp/</guid>
      <description>1. TCP概述 不同于UDP，TCP提供一种面向连接的、可靠的字节流服务，没有由TCP自动插入的记录标志或消息边界，TCP根本不会解读字节流里的</description>
    </item>
    
    <item>
      <title>加密与安全机制</title>
      <link>https://ericwu0930.github.io/post/security/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ericwu0930.github.io/post/security/</guid>
      <description>加密是为了满足以下需求：在不安全的信道上保护所传输信息的机密性、完整性以及可认证性。有两种重要的加密算法——对称密钥与非对称密钥。 对称密钥 在</description>
    </item>
    
    <item>
      <title>JVM类加载机制</title>
      <link>https://ericwu0930.github.io/post/classload/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ericwu0930.github.io/post/classload/</guid>
      <description>虚拟机把描述类的数据从Class文件加载到内存，并对数据进行校验、转换解析和初始化，最终形成可以被虚拟机直接使用的Java类型，这就是虚拟机</description>
    </item>
    
    <item>
      <title>类加载器与双亲委派模型</title>
      <link>https://ericwu0930.github.io/post/classloader/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ericwu0930.github.io/post/classloader/</guid>
      <description>在类加载过程的加载阶段，“通过一个类的全限定名来获取描述此类的二进制字节流”是通过“类加载器”来实现的。类加载器虽然只用于实现类的加载动作，</description>
    </item>
    
    <item>
      <title>JVM垃圾收集器</title>
      <link>https://ericwu0930.github.io/post/gc/</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ericwu0930.github.io/post/gc/</guid>
      <description>如果说收集算法是内存回收的方法论，那么垃圾收集器就是内存回收的具体实现。 一、串行 单线程 堆内存较小，适合个人电脑 -XX: +UseSerialGC=Serial+SerialOld 新生代使用复制算法，老年代</description>
    </item>
    
    <item>
      <title>垃圾回收调优</title>
      <link>https://ericwu0930.github.io/post/gc_tuner/</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ericwu0930.github.io/post/gc_tuner/</guid>
      <description>一、确定目标 低延迟 CMS G1 ZGC ————对于互联网程序 高吞吐量 ParalellGC ———对于科学运算 二、最快的GC是不发生GC 当经常发生GC的时候，考虑下面几个问题 数</description>
    </item>
    
  </channel>
</rss>